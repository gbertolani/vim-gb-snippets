snippet shortlicence
# -*- coding: utf-8 -*-
###############################################################################
#   Copyright (c) 2021 Eynes (Gaston Alberto Bertolani)
#   License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl.html).
###############################################################################
endsnippet

snippet licence
#-*- coding:utf-8 -*-
##############################################################################
#
#    Copyright (c) 2021-TODAY Eynes - Ingenieria del software.
#    (http://www.eynes.com.ar) All Rights Reserved.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

endsnippet

snippet odooimport
import logging

from odoo import _, api, fields, models
from odoo import exceptions

_logger = logging.getLogger(__name__)

endsnippet

snippet verror
raise exceptions.ValidationError(
    $0
)
endsnippet

snippet openerpimport

import logging

from openerp import _, api, fields, models
from openerp import exceptions

_logger = logging.getLogger(__name__)

endsnippet


snippet oBoolean
${1} = fields.Boolean(
    string='${2}',
)
endsnippet

snippet oChar
${1} = fields.Char(
    string='${2}',
)
endsnippet

snippet oFloat
${1} = fields.Float(
    string='${2}',
)
endsnippet

snippet oInteger
${1} = fields.Integer(
    string='${2}',
)
endsnippet

snippet oText
${1} = fields.Text(
    string='${2}',
)
endsnippet

snippet oDate
${1} = fields.Date(
    string='${2}',
)
endsnippet

snippet oDatetime
${1} = fields.Datetime(
    string='${2}',
)
endsnippet

snippet oBinary
${1} = fields.Binary(
    string='${2}',
)
endsnippet

snippet oSelection
${1} = fields.Selection(
    [
        $0
    ],
    string='${2}',
)
endsnippet

snippet oMany2one
${1} = fields.Many2one(
    comodel_name='${2}',
    string='${3}',
)
endsnippet

snippet oOne2many
${1} = fields.One2many(
    comodel_name='${2}',
    inverse_name='${3}',
    string='${4}',
)
endsnippet

snippet oMany2many
${1} = fields.Many2many(
    comodel_name='${2}',
    relation='${3}',
    column1='${4}',
    column2='${5}',
    string='${6}',
)
endsnippet

snippet oActive
active = fields.Boolean(
    string='Active',
    default=True,
)
endsnippet

snippet optDefault
default=${1}
endsnippet

snippet optRequired
required=${1:True}
endsnippet

snippet optReadonly
readonly=${1:True}
endsnippet

snippet optStore
store=${1:True}
endsnippet

snippet optCopy
copy=${1:True}
endsnippet

snippet optSearch
search='${1}'
endsnippet

snippet optDomain
domain=${1:[]}
endsnippet

snippet optInvisible
invisible=${1:True}
endsnippet

snippet optIndex
index=${1:True}
endsnippet

snippet optRelated
related='${1}'
endsnippet

snippet optCompute
compute='${1}'
endsnippet

snippet optHelp
help='${1}'
endsnippet


